[{"D:\\my-app\\src\\index.tsx":"1","D:\\my-app\\src\\App.tsx":"2","D:\\my-app\\src\\Todolist.tsx":"3","D:\\my-app\\src\\AddItemForm.tsx":"4","D:\\my-app\\src\\EditableSpan.tsx":"5","D:\\my-app\\src\\reportWebVitals.ts":"6","D:\\my-app\\src\\AppWithReducers.tsx":"7","D:\\my-app\\src\\state\\todolists-reducer.ts":"8","D:\\my-app\\src\\AppWithRedux.tsx":"9","D:\\my-app\\src\\state\\tasks-reducer.ts":"10","D:\\my-app\\src\\state\\store.ts":"11","D:\\my-app\\src\\Task.tsx":"12","D:\\my-app\\src\\AddItemForm.stories.tsx":"13","D:\\my-app\\src\\Task.stories.tsx":"14","D:\\my-app\\src\\EditableSpan.stories.tsx":"15","D:\\my-app\\src\\AppWithRedux.stories.tsx":"16","D:\\my-app\\src\\stories\\ReduxStoreProviderDecorator.tsx":"17","D:\\my-app\\src\\stories\\decorators\\todolists-api.stories.tsx":"18","D:\\my-app\\src\\api\\todolists-API.ts":"19"},{"size":610,"mtime":1607516583427,"results":"20","hashOfConfig":"21"},{"size":5796,"mtime":1607418138034,"results":"22","hashOfConfig":"23"},{"size":3628,"mtime":1608743685016,"results":"24","hashOfConfig":"21"},{"size":1500,"mtime":1607609707948,"results":"25","hashOfConfig":"21"},{"size":885,"mtime":1607600641780,"results":"26","hashOfConfig":"21"},{"size":425,"mtime":1606893943450,"results":"27","hashOfConfig":"21"},{"size":5377,"mtime":1607512242769,"results":"28","hashOfConfig":"23"},{"size":3399,"mtime":1608734210545,"results":"29","hashOfConfig":"21"},{"size":4666,"mtime":1608743611849,"results":"30","hashOfConfig":"21"},{"size":4733,"mtime":1608736482305,"results":"31","hashOfConfig":"21"},{"size":518,"mtime":1608733956235,"results":"32","hashOfConfig":"21"},{"size":1620,"mtime":1608712343267,"results":"33","hashOfConfig":"21"},{"size":371,"mtime":1607604863226,"results":"34","hashOfConfig":"21"},{"size":1346,"mtime":1608712519254,"results":"35","hashOfConfig":"21"},{"size":396,"mtime":1607605249667,"results":"36","hashOfConfig":"21"},{"size":366,"mtime":1607606755309,"results":"37","hashOfConfig":"21"},{"size":1879,"mtime":1608711580441,"results":"38","hashOfConfig":"21"},{"size":6130,"mtime":1608208847680,"results":"39","hashOfConfig":"21"},{"size":2430,"mtime":1608708701683,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"947wd0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6nhimb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"D:\\my-app\\src\\index.tsx",[],["87","88"],"D:\\my-app\\src\\App.tsx",[],"D:\\my-app\\src\\Todolist.tsx",["89","90","91","92","93","94"],"D:\\my-app\\src\\AddItemForm.tsx",["95"],"import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {Button, IconButton, TextField} from \"@material-ui/core\";\r\nimport {ControlPoint} from \"@material-ui/icons\";\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const  AddItemForm = React.memo( (props: AddItemFormPropsType) => {\r\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\")\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    const onNewTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTaskTitle(e.currentTarget.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(error !== null){\r\n            setError(null)\r\n        }\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n    const addTask = () => {\r\n        if (newTaskTitle.trim() !== '') {\r\n            props.addItem(newTaskTitle.trim())\r\n            setNewTaskTitle(\"\")\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n\r\n    }\r\n    return <div>\r\n        <TextField value={newTaskTitle}\r\n                   variant={\"outlined\"}\r\n                   label={'Type value'}\r\n                   onChange={onNewTitleChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   error={!!error}\r\n                   helperText={error}\r\n        />\r\n        <IconButton onClick={addTask}  color={\"primary\"}>\r\n            <ControlPoint/>\r\n        </IconButton>\r\n    </div>\r\n});","D:\\my-app\\src\\EditableSpan.tsx",[],"D:\\my-app\\src\\reportWebVitals.ts",[],"D:\\my-app\\src\\AppWithReducers.tsx",["96"],"D:\\my-app\\src\\state\\todolists-reducer.ts",["97"],"D:\\my-app\\src\\AppWithRedux.tsx",["98","99"],"D:\\my-app\\src\\state\\tasks-reducer.ts",["100","101","102"],"D:\\my-app\\src\\state\\store.ts",[],"D:\\my-app\\src\\Task.tsx",["103"],"import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {Checkbox, IconButton} from \"@material-ui/core\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {TaskStatuses, TaskType} from \"./api/todolists-API\";\r\n\r\ntype TaskPropsType = {\r\n    changeTaskStatus: (taskId: string, status:TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (id: string, todolistId: string) => void\r\n    task: TaskType\r\n    todolistId: string\r\n}\r\nexport const Task = React.memo( (props: TaskPropsType) => {\r\n    const onRemoveHandler = () => {\r\n        props.removeTask(props.task.id, props.todolistId)\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n\r\n    }\r\n    const onChangeTitleChangeHandler =useCallback( (newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    },[props.task.id,props.changeTaskTitle,props.todolistId]);\r\n\r\n    return <div className={props.task.status === TaskStatuses.Completed ? \"is-done\" : \"\"} key={props.task.id}>\r\n        <Checkbox onChange={onChangeHandler} checked={props.task.status === TaskStatuses.Completed}/>\r\n\r\n        <EditableSpan title={props.task.title} onChange={onChangeTitleChangeHandler}/>\r\n        <IconButton onClick={onRemoveHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n});","D:\\my-app\\src\\AddItemForm.stories.tsx",["104"],"import { AddItemForm } from \"./AddItemForm\";\r\nimport React from \"react\";\r\nimport {action} from '@storybook/addon-actions'\r\n\r\nexport default {\r\n    title: 'AddItemForm Component',\r\n    component: AddItemForm\r\n}\r\n\r\nconst callBack =  action('button add was pressed');\r\n\r\nexport const AddItemFormBaseExample = (props:any) => {\r\n    return <AddItemForm addItem={callBack}/>\r\n}",["105","106"],"D:\\my-app\\src\\Task.stories.tsx",["107"],"D:\\my-app\\src\\EditableSpan.stories.tsx",["108"],"import React from \"react\";\r\nimport {action} from '@storybook/addon-actions'\r\nimport { EditableSpan } from \"./EditableSpan\";\r\n\r\nexport default {\r\n    title: 'EditableSpan Component',\r\n    component: EditableSpan\r\n}\r\n\r\nconst changeCallback = action('value changed')\r\n\r\n\r\nexport const EditableSpanBaseExample = () => {\r\n    return <EditableSpan title={\"Start Value\"} onChange={changeCallback}/>\r\n\r\n}","D:\\my-app\\src\\AppWithRedux.stories.tsx",["109"],"import React from \"react\";\n\nimport AppWithRedux from \"./AppWithRedux\";\n\nimport { ReduxStoreProviderDecorator } from \"./stories/ReduxStoreProviderDecorator\";\n\nexport default {\n    title: 'AppWithRedux Component',\n    component: AppWithRedux,\n    decorators:[ReduxStoreProviderDecorator]\n}\n\nexport const AppWithReduxBaseExample = () => {\n    return  <AppWithRedux />\n}","D:\\my-app\\src\\stories\\ReduxStoreProviderDecorator.tsx",["110","111"],"D:\\my-app\\src\\stories\\decorators\\todolists-api.stories.tsx",["112","113","114","115","116","117","118"],"import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {todolistsAPI} from '../../api/todolists-API'\r\n\r\nexport default {\r\n    title: 'API'\r\n}\r\n\r\nconst settings = {\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"5ef544a3-f9f0-42e5-96f2-1621636d3144\"\r\n    }\r\n}\r\n\r\nexport const GetTodolists = () => {\r\n    const [state, setState] = useState<any>(null)\r\n    useEffect(() => {\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }, [])\r\n\r\n    return <div> {JSON.stringify(state)}</div>\r\n}\r\n\r\nexport const CreateTodolist = () => {\r\n    const [state, setState] = useState<any>(null)\r\n    useEffect(() => {\r\n        todolistsAPI.createTodolist('lol3')\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return <div> {JSON.stringify(state)}</div>\r\n}\r\n\r\nexport const DeleteTodolist = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    useEffect(() => {\r\n        const todolistId = '604dd85b-172d-4e85-9c9e-1fdb0b23547e'\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }, [])\r\n\r\n    return <div> {JSON.stringify(state)}</div>\r\n}\r\n\r\nexport const UpdateTodolistTitle = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    useEffect(() => {\r\n        const todolistId = '96c2213b-5a83-4acf-b8b4-cac6ad4ddf61'\r\n        todolistsAPI.updateTodolist(todolistId, 'lol4')\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }, [])\r\n\r\n    return <div> {JSON.stringify(state)}</div>\r\n}\r\n\r\nexport const GetTasks = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    const [todolistId, setTodolistId] = useState<string>(\"\")\r\n\r\n    const getTasks = () => {\r\n        todolistsAPI.getTasks(todolistId)\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }\r\n\r\n    return <div> {JSON.stringify(state)}\r\n        <div>\r\n            <input placeholder={\"todolistId\"} value={todolistId}\r\n                   onChange={(e) => {\r\n                       setTodolistId(e.currentTarget.value)\r\n                   }}/>\r\n\r\n\r\n            <button onClick={getTasks}>Get Tasks</button>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const DeleteTask = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    const [taskId, setTaskId] = useState<string>(\"\")\r\n    const [todolistId, setTodolistId] = useState<string>(\"\")\r\n\r\n    const deleteTask = () => {\r\n        todolistsAPI.deleteTask(todolistId, taskId)\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }\r\n\r\n    return <div> {JSON.stringify(state)}\r\n        <div>\r\n            <input placeholder={\"todolistId\"} value={todolistId} onChange={(e) => {\r\n                setTodolistId(e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"taskId\"} value={taskId} onChange={(e) => {\r\n                setTaskId(e.currentTarget.value)\r\n            }}/>\r\n            <button onClick={deleteTask}>Delete Task</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const CrateTask = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    const [taskTitle, setTaskTitle] = useState<string>(\"\")\r\n    const [todolistId, setTodolistId] = useState<string>(\"\")\r\n\r\n    const createTask = () => {\r\n        todolistsAPI.createTask(todolistId, taskTitle)\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }\r\n\r\n    return <div> {JSON.stringify(state)}\r\n        <div>\r\n            <input placeholder={\"todolistId\"} value={todolistId}\r\n                   onChange={(e) => {\r\n                       setTodolistId(e.currentTarget.value)\r\n                   }}/>\r\n\r\n            <input placeholder={\"taskTitle\"} value={taskTitle}\r\n                   onChange={(e) => {\r\n                       setTaskTitle(e.currentTarget.value)\r\n                   }}/>\r\n\r\n            <button onClick={createTask}>Create Task</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const UpdateTask = () => {\r\n\r\n    const [state, setState] = useState<any>(null)\r\n    const [title, setTitle] = useState<string>(\"title 1\")\r\n    const [description, setDescription] = useState<string>(\"description 1\")\r\n    const [status, setStatus] = useState<number>(0)\r\n    const [priority, setPriority] = useState<number>(0)\r\n    const [startDay, setStartDay] = useState<string>('')\r\n    const [deadLine, setDeadLine] = useState<string>('')\r\n\r\n    const [todolistId, setTodolistId] = useState<string>('')\r\n    const [taskId, setTaskId] = useState<string>('')\r\n\r\n    const createTask = () => {\r\n        todolistsAPI.updateTask(todolistId, taskId, {\r\n            deadline: '',\r\n            description: description,\r\n            priority: priority,\r\n            startDate: '',\r\n            status: status,\r\n            title: title\r\n        })\r\n            .then((res) => {\r\n                setState(res.data)\r\n            })\r\n    }\r\n\r\n    return <div> {JSON.stringify(state)}\r\n        <div>\r\n            <input placeholder={\"taskId\"} value={taskId} onChange={e => {\r\n                setTaskId(e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"todolistId\"} value={todolistId} onChange={e => {\r\n                setTodolistId(e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"taskTitle\"} value={title} onChange={e => {\r\n                setTitle(e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"taskDescription\"} value={description} onChange={e => {\r\n                setDescription(e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"status\"} value={status} type=\"number\" onChange={e => {\r\n                setStatus(+e.currentTarget.value)\r\n            }}/>\r\n            <input placeholder={\"priority\"} value={priority} type=\"number\" onChange={e => {\r\n                setPriority(+e.currentTarget.value)\r\n            }}/>\r\n\r\n            <button onClick={createTask}>Update Task</button>\r\n        </div>\r\n    </div>\r\n}","D:\\my-app\\src\\api\\todolists-API.ts",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":33,"column":7,"nodeType":"125","endLine":33,"endColumn":9,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":37,"column":7,"nodeType":"125","endLine":37,"endColumn":37,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"127","line":40,"column":7,"nodeType":"125","endLine":40,"endColumn":36,"suggestions":"129"},{"ruleId":"123","severity":1,"message":"127","line":43,"column":7,"nodeType":"125","endLine":43,"endColumn":36,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"127","line":49,"column":7,"nodeType":"125","endLine":49,"endColumn":43,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"127","line":53,"column":7,"nodeType":"125","endLine":53,"endColumn":31,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":15},{"ruleId":"133","severity":1,"message":"137","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":44,"column":45,"nodeType":"140","messageId":"141","endLine":44,"endColumn":47},{"ruleId":"123","severity":1,"message":"142","line":35,"column":7,"nodeType":"125","endLine":35,"endColumn":9,"suggestions":"143"},{"ruleId":"123","severity":1,"message":"144","line":70,"column":8,"nodeType":"125","endLine":70,"endColumn":10,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"146","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":19},{"ruleId":"133","severity":1,"message":"147","line":70,"column":17,"nodeType":"135","messageId":"136","endLine":70,"endColumn":21},{"ruleId":"133","severity":1,"message":"147","line":76,"column":17,"nodeType":"135","messageId":"136","endLine":76,"endColumn":21},{"ruleId":"123","severity":1,"message":"127","line":25,"column":7,"nodeType":"125","endLine":25,"endColumn":61,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":5,"column":1,"nodeType":"151","endLine":8,"endColumn":2},{"ruleId":"119","replacedBy":"152"},{"ruleId":"121","replacedBy":"153"},{"ruleId":"149","severity":1,"message":"150","line":6,"column":1,"nodeType":"151","endLine":9,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":5,"column":1,"nodeType":"151","endLine":8,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":7,"column":1,"nodeType":"151","endLine":11,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":21,"column":9,"nodeType":"156","messageId":"157","endLine":26,"endColumn":10,"fix":"158"},{"ruleId":"154","severity":1,"message":"159","line":27,"column":9,"nodeType":"156","messageId":"157","endLine":32,"endColumn":10,"fix":"160"},{"ruleId":"133","severity":1,"message":"161","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":5,"column":1,"nodeType":"151","endLine":7,"endColumn":2},{"ruleId":"133","severity":1,"message":"162","line":9,"column":7,"nodeType":"135","messageId":"136","endLine":9,"endColumn":15},{"ruleId":"133","severity":1,"message":"163","line":153,"column":12,"nodeType":"135","messageId":"136","endLine":153,"endColumn":20},{"ruleId":"133","severity":1,"message":"164","line":153,"column":22,"nodeType":"135","messageId":"136","endLine":153,"endColumn":33},{"ruleId":"133","severity":1,"message":"165","line":154,"column":12,"nodeType":"135","messageId":"136","endLine":154,"endColumn":20},{"ruleId":"133","severity":1,"message":"166","line":154,"column":22,"nodeType":"135","messageId":"136","endLine":154,"endColumn":33},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["169"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["170"],["171"],["172"],["173"],["174"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["175"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["176"],"'setTodolistsAC' is defined but never used.","'task' is assigned a value but never used.",["177"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["167"],["168"],"no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"178","text":"179"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"180","text":"181"},"'axios' is defined but never used.","'settings' is assigned a value but never used.","'startDay' is assigned a value but never used.","'setStartDay' is assigned a value but never used.","'deadLine' is assigned a value but never used.","'setDeadLine' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"184","fix":"188"},{"desc":"184","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"184","fix":"193"},[749,764],"\"todolistId1\"",[1199,1214],"\"todolistId2\"","Update the dependencies array to be: [dispatch, props.id]",{"range":"194","text":"195"},"Update the dependencies array to be: [props]",{"range":"196","text":"197"},{"range":"198","text":"197"},{"range":"199","text":"197"},{"range":"200","text":"197"},{"range":"201","text":"197"},"Update the dependencies array to be: [dispatch]",{"range":"202","text":"203"},{"range":"204","text":"203"},{"range":"205","text":"197"},[1299,1301],"[dispatch, props.id]",[1408,1438],"[props]",[1549,1578],[1695,1724],[1936,1972],[2078,2102],[1187,1189],"[dispatch]",[2527,2529],[1146,1200]]